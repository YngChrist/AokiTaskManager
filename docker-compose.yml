services:
  issuel_api:
    image: issuel_api
    build:
      context: .
      dockerfile: Issuel.Api/Dockerfile
    ports:
      - ${ISSUEL_PORT}:80
    environment:
      - ConnectionStrings__DbConnection=${ISSUEL_DB_CONNECTION_STRING}
    depends_on:
      issuel_postgres_migrator:
        condition: service_healthy
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost/api/ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
  
  
  issuel_postgres_migrator:
    image: migrator
    build:
      context: .
      dockerfile: Dockerfile_Migrator
    environment:
      CONNECTION_STRING: ${ISSUEL_DB_CONNECTION_STRING}
      CONTEXT_PROJECT_PATH: src/Issuel.Infrastructure.Data
      APP_PROJECT_PATH: src/Issuel.Api
    depends_on:
      - issuel_postgres_db
    restart: no
    healthcheck:
      test: [ "CMD", "test", "-f", "/app/migration_success"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  
  issuel_postgres_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${ISSUEL_POSTGRES_DB}
      POSTGRES_USER: ${ISSUEL_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ISSUEL_POSTGRES_PASSWORD}
    ports:
      - ${ISSUEL_POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 10s
      retries: 5
      
volumes:
  postgres_data: